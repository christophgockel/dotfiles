if empty(glob('~/.vim/autoload/plug.vim'))
  silent !curl -fLo ~/.vim/autoload/plug.vim --create-dirs https://raw.githubusercontent.com/junegunn/vim-plug/master/plug.vim
  autocmd VimEnter * PlugInstall --sync | source $MYVIMRC
endif

set nocompatible
filetype off

call plug#begin("~/.vim/plugged")
  Plug 'junegunn/fzf'
  Plug 'scrooloose/nerdtree'
  Plug 'guns/vim-clojure-static'
  Plug 'kchmck/vim-coffee-script'
  Plug 'tpope/vim-endwise'
  Plug 'fatih/vim-go'
  Plug 'chriskempson/base16-vim'
  Plug 'elixir-lang/vim-elixir'
  Plug 'airblade/vim-gitgutter'
  Plug 'ElmCast/elm-vim'
  Plug 'w0rp/ale'
  Plug 'leafgarland/typescript-vim'
  Plug 'sbdchd/neoformat'
  Plug 'felipesere/search'
  Plug 'rust-lang/rust.vim'
  Plug 'peitalin/vim-jsx-typescript'
  Plug 'neovimhaskell/haskell-vim'
  Plug 'rhysd/git-messenger.vim'
call plug#end()

set rtp+=~/.fzf


set number       " line numbers
set history=1000 " history of ':' commands and searches, etc.
set noswapfile   " don't create .swp files
set nobackup     " don't create <file>~ backup files
set modeline     " enable interpretation of modelines
set modelines=5  " in files

filetype plugin on
filetype indent on

set autoread     " re-read externally changed files

set t_Co=256     " enable 256 colors

set ruler        " enable line/column display in the bottom right corner
set scrolloff=7  " keep 7 lines at the top or bottom displayed while scrolling
set cmdheight=2  " height of command line area

set hidden       " hide buffers instead of closing them

set backspace=eol,start,indent " allow to backspace over everything
set whichwrap+=<,>,h,l

set ignorecase
set smartcase

set lazyredraw
set magic

set showmatch " show matching parenthesis
set mat=2


set noerrorbells " no sounds.
set novisualbell " no sounds.
set t_vb=        " no sounds.
set tm=500

syntax enable
let base16colorspace=256
if filereadable(expand("~/.vimrc_background"))
  source ~/.vimrc_background
endif

set encoding=utf8

set expandtab
set smarttab      " insert spaces instead of tabs
set autoindent
set smartindent
set wrap
set tabstop=2
set shiftwidth=2

let mapleader = ","
let g:mapleader = ","

" clean trailing whitespace
nnoremap <leader>w mz:%s/\s\+$//<cr>:let @/=''<cr>`z

" Open new split panes to right and bottom, which feels more natural
set splitbelow
set splitright

" searching
set hlsearch
set incsearch
nnoremap <silent> <leader><space> :nohl<CR>

" tabs
map <leader>tn :tabnew<cr>
map <leader>to :tabonly<cr>
map <leader>tc :tabclose<cr>
map <leader>tm :tabmove

" Opens a new tab with the current buffer's path
map <leader>te :tabedit <c-r>=expand("%:p:h")<cr>/

" disable arrow keys
map <up> <nop>
map <down> <nop>
map <left> <nop>
map <right> <nop>
imap <up> <nop>
imap <down> <nop>
imap <left> <nop>
imap <right> <nop>

" easier movement between splits
map <C-h> <C-W>h
map <C-j> <C-W>j
map <C-k> <C-W>k
map <C-l> <C-W>l

"tab mappings
map <D-1> 1gt
map <D-2> 2gt
map <D-3> 3gt
map <D-4> 4gt
map <D-5> 5gt
map <D-6> 6gt
map <D-7> 7gt
map <D-8> 8gt
map <D-9> 9gt
map <D-t> :tabnew<CR>
map <D-w> :tabclose<CR>

" navigate from line to line even when the line exceeds the split's width
nnoremap j gj
nnoremap k gk
vnoremap j gj
vnoremap k gk

" Insert a hash rocket with <c-l>
imap <c-l> <space>=><space>

" center every search result in the middle of the screen
nnoremap n nzz
nnoremap N Nzz
nnoremap * *zz
nnoremap # #zz
nnoremap g* g*zz
nnoremap g# g#zz

" highlight unwanted whitespace
highlight ExtraWhitespace ctermbg=red guibg=red
match ExtraWhitespace /\s\+$/
autocmd BufWinEnter * match ExtraWhitespace /\s\+$/
autocmd InsertEnter * match ExtraWhitespace /\s\+\%#\@<!$/
autocmd InsertLeave * match ExtraWhitespace /\s\+$/
autocmd BufWinLeave * call clearmatches()

let s:config_path = fnamemodify(resolve(expand('<sfile>:p')), ':h')
exec "source " . s:config_path . '/vimrc-tabs'
exec "source " . s:config_path . '/vimrc-vim-clojure-static'
exec "source " . s:config_path . '/vimrc-nerdtree'
exec "source " . s:config_path . '/vimrc-filetype-settings'
exec "source " . s:config_path . '/vimrc-fzf'
exec "source " . s:config_path . '/vimrc-vagrant-sync'

let g:rustfmt_autosave = 1

